import mongoose from 'mongoose';
const examSchema=new mongoose.Schema({
    title:{
        type:String,
        required:true
    },
    description:{
        type:String,
        required:true
    },
    date:{
        type:Date,
        required:true
    },
    duration:{
        type:Number,
        required:true
    },
    createdat:{
        type:Date,
        default:Date.now
    },
    createdby:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'User',
        required:true
    },
    accessLink:{
        type:String,
        unique:true
    },
    teacherId:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'User',
        required:true
    }
    });
    const QuestionSchema=new mongoose.Schema({
        examid:{
            type:mongoose.Schema.Types.ObjectId,
            ref:'Exam',
            required:true
        },
        questionType:{
            type:String,
            enum:['direct','qcm',],
            required:true
        },
        text:{
            type:String,
            required:true
        },
        media:{
            type:String,
            required:true
        },
        options:{
            type:[String],
            required:true
        },
        correctAnswer:{
            type:String,
            required:true
        },
        directAnswer:{
            type:String,
            required:true
        },
        tolerance:{
            type:Number,
            required:true
        },
        points:{
            type:Number,
            required:true
        },
        duration:{
            type:Number,
            required:true
        },
        order:{
            type:Number,
            required:true
        },
    });
    const studentSchema=new mongoose.Schema({
        examid:{
            type:mongoose.Schema.Types.ObjectId,
            ref:'Exam',
            required:true
        },
        studentId:{
            type:mongoose.Schema.Types.ObjectId,
            ref:'User',
            required:true
        },
        score:{
            type:Number,
            default:0
        },
        status:{
            type:String,
            enum:['pending','completed'],
            default:'pending'
        },
        answers:{
            type:[String],
            required:true
        },
        startTime:{
            type:Date,
            required:true
        },
        endTime:{
            type:Date,
            required:true
        }
    });
    module.exports={
    Exam: mongoose.model('Exam', examSchema),
    Question: mongoose.model('Question', QuestionSchema),
    Student: mongoose.model('Student', studentSchema)};

    
    export default mongoose.model('Exam', examSchema);